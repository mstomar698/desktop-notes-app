name: 'Macos Build and Distribute'

on:
  push:
    branches:
      - main

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: macos-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    env:
      RUST_BACKTRACE: 1
      NODE_ENV: production
      TAURI_SKIP_DEVSERVER: true

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${process.env.PACKAGE_VERSION}`,
              name: `Desktop App v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            override: true

      - name: Install frontend dependencies
        run: npm install

    #   - uses: tauri-apps/tauri-action@v0
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    #       CMAKE_BUILD_TYPE: Release
    #     with:
    #       releaseId: ${{ needs.create-release.outputs.release_id }}
      - name: Build Tauri App
        run: npm run tauri build

  publish-release:
    permissions:
      contents: write
    runs-on: macos-latest
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false
            })
