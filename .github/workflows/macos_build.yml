name: 'MacOS Build and Release'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: macos-latest

    env:
      RUST_BACKTRACE: 1
      NODE_ENV: production
      TAURI_SKIP_DEVSERVER: true

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Rust environment
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Install Node.js for Next.js frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Cache Node.js dependencies
      - name: Cache Node.js Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install Tauri CLI
      - name: Install Tauri CLI
        run: |
          npm install -g @tauri-apps/cli

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install
          cd src-tauri
          cargo update && cargo build --release
          cd ..

      # Build the Tauri application
      - name: Build Tauri App
        run: npm run tauri build

      # Verify the application
      - name: Verify Build
        run: |
          if [ ! -d "src-tauri/target/release/bundle/macos" ]; then
            echo "Build failed, application files not found."
            exit 1
          fi

      # Upload the built artifacts to GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: success() # Run only if the build is successful
        with:
          files: |
            src-tauri/target/release/bundle/macos/*.app
            src-tauri/target/release/bundle/macos/*.dmg
            src-tauri/target/release/bundle/macos/*.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
