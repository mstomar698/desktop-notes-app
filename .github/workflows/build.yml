name: Build and Distribute Multi-Platform Binaries

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Tauri App on Multiple Platforms
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Set up OS dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev libgtk-3-dev

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri App
        run: cargo tauri build --release

      - name: Upload Binaries
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app-${{ runner.os }}
          path: target/release/bundle/


  release:
    name: Create Release and Attach Binaries
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: tauri-app-${{ matrix.os }}
          path: ./binaries

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}"
          release_name: "Tauri App Release v${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload Assets to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries/tauri-app-*
          asset_name: "tauri-app-${{ matrix.os }}.zip"
          asset_content_type: application/zip
